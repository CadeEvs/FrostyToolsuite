<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:Frosty.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:falpha="FrostyAlpha">

    <SolidColorBrush x:Key="WindowBackground" Color="#141414"/>
    <SolidColorBrush x:Key="FontColor" Color="#F8F8F8"/>
    <SolidColorBrush x:Key="ControlBackground" Color="#454545"/>
    <SolidColorBrush x:Key="ControlHighlight" Color="#707070"/>
    <SolidColorBrush x:Key="ControlPressed" Color="#585858"/>
    <SolidColorBrush x:Key="ButtonImage" Color="#292929"/>
    <SolidColorBrush x:Key="ScrollbarBackground" Color="#232323"/>
    <SolidColorBrush x:Key="MenuItemHighlight" Color="#6C6C6C"/>
    <SolidColorBrush x:Key="MenuItemBackground" Color="#141414"/>
    <SolidColorBrush x:Key="SubMenuItemHighlight" Color="#292929"/>
    <SolidColorBrush x:Key="SubItemHighlight" Color="#303030"/>
    <SolidColorBrush x:Key="SubItemPressed" Color="#404040"/>
    <SolidColorBrush x:Key="ListBackground" Color="#292929"/>

    <!-- Frosty Logo -->
    <Path x:Key="Icon" Data="M 66.669922 4.7421875 L 53.285156 18.126953 L 57.832031 35.804688 L 43.941406 28.482422 L 44.699219 43.380859 L 31.0625 30.501953 L 13.132812 35.046875 L 17.929688 54.494141 L 35.355469 58.533203 L 22.476562 67.119141 L 34.849609 74.443359 L 17.425781 79.494141 L 13.384766 97.171875 L 32.830078 102.98047 L 44.699219 90.353516 L 45.457031 105.75781 L 57.578125 99.193359 L 53.791016 117.62695 L 67.427734 129.49609 L 80.306641 115.10156 L 76.771484 98.181641 L 90.662109 104.74805 L 90.408203 91.869141 L 104.04492 104.24414 L 121.4707 99.697266 L 116.92578 80.503906 L 98.490234 75.201172 L 111.11719 67.119141 L 98.742188 59.796875 L 117.42969 54.746094 L 121.97656 37.068359 L 102.7832 30.753906 L 89.904297 43.634766 L 89.146484 27.976562 L 76.519531 34.542969 L 80.560547 17.117188 L 66.669922 4.7421875 z M 66.658203 25.910156 L 73.65625 37.314453 L 66.580078 62.201172 L 60.175781 37.300781 L 66.658203 25.910156 z M 31.072266 45.349609 L 44.464844 45.794922 L 63.214844 65.169922 L 38.125 58.027344 L 31.072266 45.349609 z M 88.75 46.509766 L 102.76758 47.3125 L 95.892578 58.384766 L 70.892578 64.455078 L 88.75 46.509766 z M 63.035156 68.830078 L 45.177734 87.3125 L 30.714844 87.3125 L 37.677734 75.349609 L 63.035156 68.830078 z M 71.160156 69.277344 L 95.982422 76.242188 L 103.48242 88.294922 L 89.822266 88.5625 L 71.160156 69.277344 z M 66.785156 71.419922 L 73.839844 96.330078 L 66.607422 108.02734 L 59.910156 95.974609 L 66.785156 71.419922 z"/>

    <!-- Docking Deco -->
    <Path x:Key="DockingDeco" Data="M5 5H3V3h2V5z M8 3H6v2h2V3z M11 3H9v2h2V3z M5 6H3v2h2V6z M8 6H6v2h2V6z M11 6H9v2h2V6z M5 9H3v2h2V9z M8 9  H6v2h2V9z M11 9H9v2h2V9z M5 12H3v2h2V12z M8 12H6v2h2V12z M11 12H9v2h2V12z M5 15H3v2h2V15z M8 15H6v2h2V15z M11 15H9v2h2V15z"/>

    <!-- Button -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="buttonBorder" Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="#FF707070"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="#FF585858"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="content" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Tooltip -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border x:Name="Border" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{StaticResource WindowBackground}" BorderBrush="{StaticResource ListBackground}">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="20"/>
                        </Border.Effect>
                        <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox -->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Padding" Value="4"/>
    </Style>

    <!-- ListBoxItem -->
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="4,2,4,2"/>
        <Setter Property="Height" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SubItemHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SubItemPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton -->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="buttonBorder" Background="{TemplateBinding Background}" BorderBrush="#A0A0A0" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="#FF585858" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="#FF585858" />
                            <Setter TargetName="buttonBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="#FF707070" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock -->
    <Style TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Label -->
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
    </Style>

    <!-- TextBox -->
    <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBackground}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource FontColor}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Cut" InputGestureText="Ctrl+X" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}" >
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource FontColor}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Cut" InputGestureText="Ctrl+X" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}" >
                    <Border x:Name="border" BorderBrush="{StaticResource ControlBackground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}"/>

    <!-- ComboBox -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Focusable" Value="False"/>
        <!--<Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="MinHeight" Value="22"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Name="border" Background="Transparent">
                                    <ContentPresenter ContentSource="{Binding Source}"/>
                                </Border>
                                
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="#FF707070"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="#FF585858"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderBrush="{StaticResource ControlBackground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource WindowBackground}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="18"/>
                            </Grid.ColumnDefinitions>
                            
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Focusable="False">
                                <Border x:Name="dropDownBorder" Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="200">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{StaticResource ListBackground}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            
                            <ToggleButton x:Name="toggleButton" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="{StaticResource ScrollbarBackground}">
                                            <Border x:Name="border" Background="{StaticResource ControlBackground}" CornerRadius="0 " Margin="1">
                                                <Polygon Points="0,0 7,0 3.5,4" Stroke="{StaticResource FontColor}" Fill="{StaticResource FontColor}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,8,0,0"/>
                                            </Border>
                                        </Border>
                                        
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False"/>

                            <ToggleButton x:Name="invisToggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="Transparent"/>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="6,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource WindowBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#555"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#292929"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#292929"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#333333"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#777"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#444"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#777"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#333333"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#777"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#292929"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#292929"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#292929"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#292929"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Slider -->
    <Style TargetType="{x:Type Slider}">
        <Setter Property="IsMoveToPointEnabled" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Margin="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="TrackBackground" BorderBrush="#333333" BorderThickness="2" Background="Transparent" Grid.Row="0" VerticalAlignment="Stretch">
                                <Track x:Name="PART_Track" Grid.Row="0">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="Slider.DecreaseLarge" Background="#2c2c2c"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="Slider.IncreaseLarge"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Height="13" OverridesDefaultStyle="True" VerticalAlignment="Center" Width="4">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Grid UseLayoutRounding="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#6e6e6e"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Border>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Scrollbar -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="17"/>
        <Setter Property="MinWidth" Value="17"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="17"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="17"/>
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="PART_LineUpButton" Grid.Row="0" Command="{x:Static ScrollBar.LineUpCommand}">
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border Background="{StaticResource ScrollbarBackground}">
                                        <Border x:Name="border" Background="{StaticResource ControlBackground}" Margin="1">
                                            <Polygon Points="0,0 7,0 3.5,-4" Stroke="{StaticResource ButtonImage}" Fill="{StaticResource ButtonImage}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="4,9,0,0"/>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                        <Border Grid.Row="1" Background="{StaticResource ScrollbarBackground}">
                            <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}">
                                        <RepeatButton.Template>
                                            <ControlTemplate>
                                                <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </RepeatButton.Template>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}">
                                        <RepeatButton.Template>
                                            <ControlTemplate>
                                                <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </RepeatButton.Template>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb>
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border x:Name="border" Background="{StaticResource ControlBackground}" Margin="1,0,1,0"/>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Border>
                        <RepeatButton x:Name="PART_LineDownButton" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}">
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border Background="{StaticResource ScrollbarBackground}">
                                        <Border x:Name="border" Background="{StaticResource ControlBackground}" Margin="1">
                                            <Polygon Points="0,0 7,0 3.5,4" Stroke="{StaticResource ButtonImage}" Fill="{StaticResource ButtonImage}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="4,6,0,0"/>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="17"/>
                <Setter Property="MinHeight" Value="17"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="17"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="17"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="PART_LineUpButton" Grid.Column="0" Command="{x:Static ScrollBar.LineLeftCommand}">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="{StaticResource ScrollbarBackground}">
                                                <Border x:Name="border" Background="{StaticResource ControlBackground}" Margin="1">
                                                    <Polygon Points="0,0 0,7 -4,3.5" Stroke="{StaticResource ButtonImage}" Fill="{StaticResource ButtonImage}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="8,4,0,0"/>
                                                </Border>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                                <Border Grid.Column="1" Background="{StaticResource ScrollbarBackground}">
                                    <Track x:Name="PART_Track" IsDirectionReversed="False" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}">
                                                <RepeatButton.Template>
                                                    <ControlTemplate>
                                                        <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                    </ControlTemplate>
                                                </RepeatButton.Template>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}">
                                                <RepeatButton.Template>
                                                    <ControlTemplate>
                                                        <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                    </ControlTemplate>
                                                </RepeatButton.Template>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb>
                                                <Thumb.Template>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border x:Name="border" Background="{StaticResource ControlBackground}" Margin="0,1,0,1"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                </Border>
                                <RepeatButton x:Name="PART_LineDownButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="{StaticResource ScrollbarBackground}">
                                                <Border x:Name="border" Background="{StaticResource ControlBackground}" Margin="1">
                                                    <Polygon Points="0,0 0,7 4,3.5" Stroke="{StaticResource ButtonImage}" Fill="{StaticResource ButtonImage}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="6,4,0,0"/>
                                                </Border>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Grid.Row="1" Fill="{StaticResource ScrollbarBackground}"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeView -->
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource ListBackground}"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
    </Style>
    
    <!-- Menu -->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{StaticResource ControlBackground}">
                        <ItemsPresenter SnapsToDevicePixels="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ContextMenu -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="{StaticResource MenuItemBackground}">
                        <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem -->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <!-- Window Menu Items -->
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="Padding" Value="12,0,12,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="templateRoot" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid>
                                    <Border x:Name="highlightRoot" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="True" Margin="1"/>
                                    <Grid x:Name="Grid" VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>

                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                                            <Border x:Name="SubMenuBorder" BorderBrush="Transparent" BorderThickness="0" Background="{StaticResource MenuItemBackground}" Padding="2">
                                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                    <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                                        </Canvas>

                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background" TargetName="highlightRoot" Value="{StaticResource MenuItemHighlight}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#838383"/>
                                </Trigger>
                                <Trigger Property="IsSubmenuOpen" Value="True">
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItemBackground}"/>
                                    <Setter Property="Background" TargetName="highlightRoot" Value="{StaticResource MenuItemBackground}"/>
                                </Trigger>
                                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!-- Menu Item with sub menu items -->
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="templateRoot" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid Margin="-1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                                    
                                    <Border x:Name="GlyphPanel" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" ClipToBounds="False" HorizontalAlignment="Center" Height="24" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                                        <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{StaticResource FontColor}" FlowDirection="LeftToRight" Height="11" Width="10"/>
                                    </Border>
                                    
                                    <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    
                                    <Path Data="M0 1 L0 1 0 9 5 5 Z" Fill="{StaticResource FontColor}" FlowDirection="LeftToRight" Height="10" Width="10" Grid.Column="6"/>
                                    
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" HorizontalOffset="-4">
                                        <Border x:Name="SubMenuBorder" BorderBrush="Transparent" BorderThickness="0" Background="{StaticResource MenuItemBackground}" Padding="2">
                                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                                    </Canvas>
                                                    <!--<Rectangle x:Name="Rectangle" Fill="{StaticResource ControlBackground}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>-->
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource SubMenuItemHighlight}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#838383"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!-- Menu Item with no sub menu items -->
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="templateRoot" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid Margin="-1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                                    
                                    <Border x:Name="GlyphPanel" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" ClipToBounds="False" HorizontalAlignment="Center" Height="24" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                                        <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{StaticResource FontColor}" FlowDirection="LeftToRight" Height="11" Width="10"/>
                                    </Border>
                                    
                                    <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    
                                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource SubMenuItemHighlight}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#838383"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Separator (MenuItem) -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="MinHeight" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="#373737" BorderThickness="0" Background="#373737" Margin="30,0,0,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListView -->
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource ListBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
    </Style>

    <!-- GridViewColumnHeader -->
    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid Margin="-1,1,-1,0">
                        <Border Background="{StaticResource ControlBackground}" Height="22" CornerRadius="0" Padding="2,0,0,0">
                            <ContentPresenter Margin="4,0,8,0" VerticalAlignment="Center"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,0,0">
                            <Thumb.Template>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Width="1" Background="{StaticResource ListBackground}" Margin="0,0,0,0"/>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid Margin="-1,1,-1,0">
                                <Border Background="{StaticResource ControlBackground}" Height="22" CornerRadius="0" Padding="2,0,2,0"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer (GridView) -->
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="false">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                            Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>

                            <Grid Margin="4">
                                <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local" CanContentScroll="False" CanHorizontallyScroll="False" CanVerticallyScroll="False" />
                            </Grid>
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Value="{TemplateBinding HorizontalOffset}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        <ScrollBar Name="PART_VerticalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListViewItem -->
    <Style x:Key="baseListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Border" Background="Transparent">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SubItemHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SubItemPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource baseListViewItemStyle}"/>

    <!-- TabControl -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="-1,0,0,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="Transparent" BorderThickness="0" Background="{StaticResource WindowBackground}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="True"/>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabItem -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Height="22" Margin="1,0,0,0">
                        <Border x:Name="mainBorder" Background="{StaticResource ControlBackground}" CornerRadius="0">
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="#292929"/>
                            <Setter Property="Margin" Value="0,1,0,0"/>
                            <Setter Property="Foreground" Value="#80F8F8F8"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="#868686" BorderThickness="1" Background="{StaticResource WindowBackground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource FontColor}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource FontColor}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ProgressBar -->
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="{StaticResource ListBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
    </Style>

    <!-- BaseTreeViewItemStyle -->
    <Style x:Key="baseTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Column="0" Grid.ColumnSpan="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label x:Name="Bd" Grid.Column="1" Grid.ColumnSpan="3" Margin="-10000,0,0,0" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                            <Path x:Name="ExpandPath" Fill="{StaticResource ControlPressed}" Stroke="{StaticResource ControlPressed}">
                                                <Path.Data>
                                                    <PathGeometry Figures="M0,0 L0,6 L6,0 z"/>
                                                </Path.Data>
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Border Grid.Column="1" BorderThickness="0" SnapsToDevicePixels="True" Height="22">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header"/>
                            </Border>
                            
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#303030"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SubItemPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers> -->
    </Style>

    <!-- FrostyWindow -->
    <Style TargetType="{x:Type ctrl:FrostyWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostyWindow}">
                    <ControlTemplate.Resources>
                        <ctrl:WindowMinimizeCommand x:Key="MinimizeCommand"></ctrl:WindowMinimizeCommand>
                        <ctrl:WindowMaximizeCommand x:Key="MaximizeCommand"></ctrl:WindowMaximizeCommand>
                        <ctrl:WindowCloseCommand x:Key="CloseCommand"></ctrl:WindowCloseCommand>
                    </ControlTemplate.Resources>
                    <Grid x:Name="mainGrid" Margin="0">
                        <Grid x:Name="WindowBorder">
                            <Grid.Background>
                                <DrawingBrush Viewport="0,0,256,32" ViewportUnits="Absolute" TileMode="Tile">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{StaticResource WindowBackground}">
                                                <GeometryDrawing.Geometry>
                                                    <RectangleGeometry Rect="0,0,1,1" />
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                            
                                            <mc:AlternateContent>
                                                <mc:Choice Requires="falpha">
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Geometry>
                                                            <RectangleGeometry Rect="0,0,1,1" />
                                                        </GeometryDrawing.Geometry>
                                                        <GeometryDrawing.Brush>
                                                            <VisualBrush>
                                                                <VisualBrush.Visual>
                                                                    <StackPanel>
                                                                        <TextBlock  Text="{Binding Path=UserName, RelativeSource={RelativeSource TemplatedParent}}" FontSize="11" FontWeight="Normal" Foreground="#131313" VerticalAlignment="Center"></TextBlock>
                                                                    </StackPanel>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </mc:Choice>
                                            </mc:AlternateContent>
                                            
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Grid.Background>
                            
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            
                            <Grid Grid.Row="0">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <Path x:Name="windowIcon" Data="{Binding Source={StaticResource Icon}, Path=Data}" Stretch="Uniform" Height="22" Width="22" Fill="{StaticResource FontColor}" Margin="3,0,0,0" RenderOptions.BitmapScalingMode="HighQuality"/>
                                    <!--<Image x:Name="windowIcon" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Icon}" Width="16" Height="16" HorizontalAlignment="Left" Margin="3,0,3,0" RenderOptions.BitmapScalingMode="HighQuality" />-->
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=Title}" Foreground="{StaticResource FontColor}" VerticalAlignment="Center" Margin="3,0,3,0" FontSize="13" FontFamily="Segoe UI" FontWeight="DemiBold"/>
                                </StackPanel>
                                <Label x:Name="dragLabel" Margin="0"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Button x:Name="minimizeButton" Background="{StaticResource WindowBackground}" Command="{StaticResource MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Width="46" Height="32" ToolTip="Minimize">
                                        <Image Source="/FrostyControls;component/Images/MinimizeWindow.png" Width="18" Height="18"/>
                                    </Button>
                                    <Button x:Name="maximizeButton" Background="{StaticResource WindowBackground}" Command="{StaticResource MaximizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Width="46" Height="32" ToolTip="Maximize">
                                        <Image Source="/FrostyControls;component/Images/MaximizeWindow.png" Width="18" Height="18"/>
                                    </Button>
                                    <Button x:Name="restoreButton" Background="{StaticResource WindowBackground}" Command="{StaticResource MaximizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Width="46" Height="32" Visibility="Collapsed" ToolTip="Restore Down">
                                        <Image Source="/FrostyControls;component/Images/RestoreWindow.png" Width="18" Height="18" OpacityMask="White"/>
                                    </Button>
                                    <Button x:Name="closeButton" Background="{StaticResource WindowBackground}" Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Width="46" Height="32" ToolTip="Close">
                                        <Image Source="/FrostyControls;component/Images/CloseWindow.png" Width="18" Height="18"/>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter />
                            </AdornerDecorator>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Visibility" TargetName="maximizeButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="restoreButton" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="windowIcon" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FrostyDockableWindow -->
    <Style TargetType="{x:Type ctrl:FrostyDockableWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostyDockableWindow}">
                    <ControlTemplate.Resources>
                        <ctrl:WindowMinimizeCommand x:Key="MinimizeCommand"></ctrl:WindowMinimizeCommand>
                        <ctrl:WindowMaximizeCommand x:Key="MaximizeCommand"></ctrl:WindowMaximizeCommand>
                        <ctrl:WindowCloseCommand x:Key="CloseCommand"></ctrl:WindowCloseCommand>
                    </ControlTemplate.Resources>
                    <Grid x:Name="mainGrid" Margin="0">
                        <Border Background="{StaticResource ControlBackground}" CornerRadius="0">
                            <Grid Background="{StaticResource WindowBackground}" Margin="2">
                                <Grid Background="{StaticResource WindowBackground}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="22"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <Grid x:Name="titleBar" Visibility="Visible" Height="22" VerticalAlignment="Top" Background="{StaticResource ControlBackground}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="89*"/>
                                                <ColumnDefinition Width="10*"/>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,-2,0,0">
                                                <Image x:Name="windowIcon" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Icon}" Width="16" Height="16" HorizontalAlignment="Left" Margin="3,0,3,0" RenderOptions.BitmapScalingMode="HighQuality" />
                                                <TextBlock x:Name="title" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=Title}" Margin="5,0,0,0" Foreground="{StaticResource FontColor}" FontSize="13" FontFamily="Segoe UI" />
                                            </StackPanel>
                                            <Label x:Name="dragLabel" Margin="0" Grid.ColumnSpan="2"/>
                                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,-2,1,0" WindowChrome.IsHitTestVisibleInChrome="True">
                                                <Button x:Name="closeButton" Width="16" Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" ToolTip="Close">
                                                    <Image Margin="-2" Source="/FrostyControls;component/Images/CloseWindow.png"/>
                                                </Button>
                                                <Button x:Name="maximizeButton" Visibility="Collapsed" Width="0"/>
                                                <Button x:Name="minimizeButton" Visibility="Collapsed" Width="0"/>
                                                <Button x:Name="restoreButton" Visibility="Collapsed" Width="0"/>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                    <AdornerDecorator Grid.Row="1">
                                        <ContentPresenter />
                                    </AdornerDecorator>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Visibility" TargetName="maximizeButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="restoreButton" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="windowIcon" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FrostyDockablePanel -->
    <Style TargetType="{x:Type ctrl:FrostyDockablePanel}">
        <Setter Property="TitleBarVisible" Value="True"/>
        <Setter Property="BorderVisible" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostyDockablePanel}">
                    <Grid>
                        <Border x:Name="border" Background="{StaticResource ControlBackground}">
                            <Grid x:Name="background" Background="{StaticResource WindowBackground}" Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="titleBarHeight" Height="22"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Grid x:Name="titleBar" Visibility="Visible" Height="22" VerticalAlignment="Top" Background="{StaticResource ControlBackground}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="89*"/>
                                        <ColumnDefinition Width="10*"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,-2,0,0">
                                        <Image x:Name="icon" Source="{TemplateBinding Icon}" Width="16" Height="16" />
                                        <TextBlock x:Name="title" Text="{TemplateBinding Title}" Margin="5,0,0,0" Foreground="{StaticResource FontColor}"/>
                                    </StackPanel>
                                    <Label x:Name="PART_DragLabel" Margin="0" Grid.ColumnSpan="2"/>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,-2,1,0">
                                        <Button x:Name="closeButton" Width="16" Visibility="Collapsed">
                                            <Image Margin="-2" Source="/FrostyControls;component/Images/CloseWindow.png"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                                <Border Background="{StaticResource WindowBackground}" Grid.Row="1">
                                    <Grid>
                                        <ContentPresenter Content="{TemplateBinding Content}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="TitleBarVisible" Value="False">
                            <Setter Property="Visibility" TargetName="titleBar" Value="Collapsed"/>
                            <Setter Property="Height" TargetName="titleBarHeight" Value="0"/>
                        </Trigger>
                        <Trigger Property="CloseButtonVisible" Value="True">
                            <Setter Property="Visibility" TargetName="closeButton" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="BorderVisible" Value="False">
                            <Setter Property="Margin" TargetName="background" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FrostyTabControl -->
    <Style TargetType="{x:Type ctrl:FrostyTabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostyTabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel>
                            <!-- Dockable Window Deco -->
                            <StackPanel x:Name="DockableBar" Height="13">
                                <Border Background="#232323" Height="11"/>
                                <Border Background="#1a1a1a" Height="1"/>
                                <Border Background="#2f2f2f" Height="1"/>
                            </StackPanel>
                            <!-- Tab -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Border>
                                    <RepeatButton Content="&lt;" x:Name="PART_ScrollLeft" Width="21">
                                        <RepeatButton.Template>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Border Background="{StaticResource ScrollbarBackground}">
                                                    <Border x:Name="border" Background="{StaticResource ControlBackground}" CornerRadius="0" Margin="1">
                                                        <Polygon Points="0,0 3.5,3.5 3.5,-3.5" Stroke="{StaticResource ButtonImage}" Fill="{StaticResource ButtonImage}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="7,10,0,0"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </RepeatButton.Template>
                                    </RepeatButton>
                                </Border>

                                <ScrollViewer Grid.Column="1" x:Name="PART_ScrollViewer" IsTabStop="False" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" BorderThickness="0" Padding="0" Margin="0,0,0,-1">
                                    <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="-1,0,0,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                </ScrollViewer>

                                <Border Grid.Column="2">
                                    <RepeatButton Content="&gt;" x:Name="PART_ScrollRight" Width="21">
                                        <RepeatButton.Template>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Border Background="{StaticResource ScrollbarBackground}">
                                                    <Border x:Name="border" Background="{StaticResource ControlBackground}" CornerRadius="0" Margin="1">
                                                        <Polygon Points="0,0 -3.5,3.5 -3.5,-3.5" Stroke="{StaticResource ButtonImage}" Fill="{StaticResource ButtonImage}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="12,10,0,0"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </RepeatButton.Template>
                                    </RepeatButton>
                                </Border>
                            </Grid>
                        </StackPanel>

                        <Border x:Name="contentPanel" BorderBrush="Transparent" BorderThickness="0" Background="{StaticResource WindowBackground}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="True"/>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- FrostyTabItem -->
    <Style TargetType="{x:Type ctrl:FrostyTabItem}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Padding" Value="6,0,6,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostyTabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True" UseLayoutRounding="True" Height="20">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="mainBorder" Background="{StaticResource ControlBackground}">
                                <Grid>
                                    <Grid Margin="{TemplateBinding Padding}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="20"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <Image x:Name="imageRect" Width="16" Height="16" Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,4,0" />
                                        <ContentPresenter Grid.Column="1" Margin="0,0,0,0" x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                        <Label x:Name="PART_DragLabel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="3"/>
                                        <Button x:Name="PART_CloseButton" Background="Transparent" Grid.Column="2" Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,-2,0">
                                            <Image Source="/FrostyEditor;component/Images/CloseWindow.png" Margin="-2"/>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Border>

                            <Border x:Name="TabSeparatorDeco" Width="1" Height="22" Background="#1a1a1a"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CloseButtonVisible" Value="False">
                            <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="imageRect" Value="Collapsed"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="#292929"/>
                            <Setter Property="Foreground" Value="#80F8F8F8"/>
                            <Setter Property="Opacity" TargetName="imageRect" Value="0.5"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="#333333"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FrostyMessageBox -->
    <Style TargetType="{x:Type ctrl:FrostyMessageBox}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <ctrl:MessageBoxClickCommand x:Key="messageBoxClickCommand"/>
                    </DataTemplate.Resources>
                    <Grid Background="{StaticResource WindowBackground}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="38"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" Background="{StaticResource ListBackground}">
                            <TextBlock x:Name="messageBoxText" Margin="12,24" TextWrapping="Wrap" Text="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type ctrl:FrostyMessageBox}}}" Foreground="#F8F8F8" TextAlignment="{Binding Path=Alignment, RelativeSource={RelativeSource AncestorType={x:Type ctrl:FrostyMessageBox}}}" VerticalAlignment="Center"/>
                        </Border>

                        <Border Grid.Row="1">
                            <Grid>
                                <Button x:Name="PART_MessageBoxOk" Content="OK" Margin="8" HorizontalAlignment="Right" Grid.Row="1" Width="75" Command="{StaticResource messageBoxClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>

                                <StackPanel Grid.Row="1" Orientation="Horizontal">
                                    <Button x:Name="PART_MessageBoxCancel" Content="Cancel" HorizontalAlignment="Left" Margin="8,8,0,8" Width="75" Visibility="Collapsed" Command="{StaticResource messageBoxClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                    <Button x:Name="PART_MessageBoxNo" Content="No" HorizontalAlignment="Left" Margin="8" Grid.Row="1" Width="75" Visibility="Collapsed" Command="{StaticResource messageBoxClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                </StackPanel>

                                <Button x:Name="PART_MessageBoxYes" Content="Yes" HorizontalAlignment="Right" Margin="8" Grid.Row="1" Width="75" Visibility="Collapsed" Command="{StaticResource messageBoxClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                            </Grid>
                        </Border>
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Buttons, RelativeSource={RelativeSource AncestorType={x:Type ctrl:FrostyMessageBox}}}" Value="OKCancel">
                            <Setter Property="Visibility" TargetName="PART_MessageBoxCancel" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Buttons, RelativeSource={RelativeSource AncestorType={x:Type ctrl:FrostyMessageBox}}}" Value="YesNoCancel">
                            <Setter Property="Visibility" TargetName="PART_MessageBoxYes" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="PART_MessageBoxNo" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="PART_MessageBoxCancel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="PART_MessageBoxOk" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Buttons, RelativeSource={RelativeSource AncestorType={x:Type ctrl:FrostyMessageBox}}}" Value="YesNo">
                            <Setter Property="Visibility" TargetName="PART_MessageBoxYes" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="PART_MessageBoxNo" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="PART_MessageBoxOk" Value="Collapsed"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FrostyWatermarkTextBox -->
    <Style TargetType="{x:Type ctrl:FrostyWatermarkTextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource FontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{StaticResource ControlBackground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="0"/>
                            <TextBlock x:Name="PART_Watermark" IsHitTestVisible="False" Margin="4" VerticalAlignment="Center" Text="{Binding Path=WatermarkText, RelativeSource={RelativeSource AncestorType={x:Type ctrl:FrostyWatermarkTextBox}}}" Foreground="{StaticResource ControlBackground}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FrostyEllipsedTextBox -->
    <Style TargetType="{x:Type ctrl:FrostyEllipsedTextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource FontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{StaticResource ControlBackground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="0" Visibility="Hidden"/>
                            <TextBlock x:Name="PART_EllipsedText" Margin="2,0,0,0" VerticalAlignment="Center" Text="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" Foreground="{TemplateBinding Foreground}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Focusable="True" Cursor="IBeam"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Visibility" TargetName="PART_ContentHost" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="PART_EllipsedText" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FrostySpinner -->
    <!--<Style TargetType="{x:Type ctrl:FrostySpinner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostySpinner}">
                    <Viewbox x:Name="vb" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" RenderTransformOrigin="0.5 0.5">
                        <Viewbox.RenderTransform>
                            <RotateTransform x:Name="spinnerRotation"/>
                        </Viewbox.RenderTransform>
                        <Canvas Name="Layer_1" Canvas.Left="0" Canvas.Top="0" Width="380" Height="380">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="10" Y="10"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas Name="spinMe">
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path847" Fill="#FFF7F7F7" Opacity=".15">
                                    <Path.Data>
                                        <PathGeometry Figures="m133.2 30.365c3.594 2.062 6.763 4.666 9.103 7.694l51.955 67.189c3.789 4.901 5.306 11.048 4.162 16.866-0.437 2.208-1.245 4.341-2.374 6.31 7.555 2.348 14.395 6.312 20.123 11.483 4.842-3.068 7.694-9.104 6.855-15.288l-11.4-84.756c-1.195-8.831-9.085-18.924-17.533-21.766l-51.803-17.31c-8.446-2.841-14.05 2.275-12.452 11.043l3.36 18.534z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path849" Fill="#FFF7F7F7" Opacity=".23">
                                    <Path.Data>
                                        <PathGeometry Figures="m64.663 73.812c4.145-0.011 8.191 0.659 11.731 2.112l78.586 32.208c5.731 2.35 10.118 6.917 12.037 12.526 0.735 2.155 1.085 4.412 1.065 6.678 3.84-0.87 7.82-1.34 11.92-1.34 3.762 0 7.432 0.387 10.975 1.118 2.83-5.056 2.383-11.751-1.494-16.766l-52.198-67.613c-5.45-7.051-17.305-11.804-26.043-10.042l-53.516 10.938c-8.734 1.762-11.024 9.007-5.257 15.801l12.186 14.378z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path851" Fill="#FFF7F7F7" Opacity=".31">
                                    <Path.Data>
                                        <PathGeometry Figures="m9.287 139.35l17.742 6.358c3.584-2.081 7.424-3.523 11.217-4.037l84.16-11.402c6.138-0.831 12.162 0.932 16.628 4.829 1.729 1.512 3.159 3.31 4.269 5.303 5.595-5.188 12.291-9.198 19.698-11.654-0.077-5.806-3.839-11.396-9.716-13.805l-78.961-32.453c-8.246-3.381-20.862-1.569-27.547 4.328l-40.856 36.225c-6.683 5.89-5.03 13.31 3.361 16.31z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path853" Fill="#FFF7F7F7" Opacity=".38">
                                    <Path.Data>
                                        <PathGeometry Figures="m38.08 217.69l67.185-51.957c4.901-3.789 11.186-5.383 17.003-4.242 2.177 0.43 4.275 1.212 6.211 2.303 2.336-7.433 6.239-14.17 11.318-19.832-3.01-4.94-9.09-7.849-15.36-7l-84.645 11.4c-8.831 1.196-18.875 9.086-21.716 17.537l-17.283 51.8c-2.841 8.443 2.288 14.05 11.055 12.453l18.544-3.367c2.064-3.58 4.668-6.75 7.695-9.09z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path855" Fill="#FFF7F7F7" Opacity=".46">
                                    <Path.Data>
                                        <PathGeometry Figures="m120.75 192.83c2.103-0.717 4.314-1.089 6.54-1.11-0.836-3.774-1.291-7.695-1.291-11.724 0-3.813 0.4-7.531 1.152-11.12-5.074-2.763-11.784-2.238-16.785 1.628l-67.609 52.202c-7.05 5.452-11.804 17.309-10.039 26.047l10.934 53.508c1.76 8.734 9.004 11.021 15.799 5.259l14.378-12.189c-0.009-4.14 0.661-8.188 2.112-11.729l32.206-78.594c2.36-5.74 7-10.27 12.61-12.19z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path857" Fill="#FFF7F7F7" Opacity=".08">
                                    <Path.Data>
                                        <PathGeometry Figures="m229.72 122.39c0.831 6.137-0.932 12.669-4.826 17.142-1.408 1.61-3.063 3.026-4.896 4.184 5.106 5.625 9.034 12.337 11.415 19.741 5.744-0.199 11.249-4.034 13.635-9.854l32.451-79.13c3.38-8.244 1.568-20.943-4.325-27.629l-36.21-40.891c-5.887-6.69-13.312-5.06-16.316 3.325l-6.352 17.74c2.074 3.585 3.525 7.421 4.035 11.214l11.4 84.161z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path859" Fill="#FFF7F7F7" Opacity=".61">
                                    <Path.Data>
                                        <PathGeometry Figures="m226.8 329.61c-3.587-2.066-6.76-4.673-9.103-7.697l-51.955-67.188c-3.791-4.898-5.364-11.154-4.226-16.976 0.432-2.185 1.219-4.282 2.318-6.218-7.44-2.332-14.184-6.234-19.852-11.312-4.942 3-7.857 9.062-7.008 15.332l11.402 84.656c1.196 8.83 9.085 18.876 17.536 21.72l51.803 17.278c8.443 2.851 14.048-2.285 12.457-11.05l-3.37-18.54z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path861" Fill="#FFF7F7F7" Opacity=".53">
                                    <Path.Data>
                                        <PathGeometry Figures="m130.28 237.59c-0.831-6.141 0.932-12.156 4.829-16.625 1.51-1.727 3.308-3.148 5.298-4.254-5.199-5.604-9.216-12.314-11.673-19.736-5.797 0.08-11.375 3.85-13.78 9.719l-32.455 78.97c-3.38 8.247-1.569 20.867 4.327 27.553l36.223 40.857c5.89 6.687 13.307 5.037 16.312-3.351l6.355-17.748c-2.077-3.584-3.521-7.428-4.037-11.222l-11.4-84.16z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path863" Fill="#FFF7F7F7" Opacity=".69">
                                    <Path.Data>
                                        <PathGeometry Figures="m295.34 286.17c-4.141 0.006-8.188-0.664-11.73-2.112l-78.586-32.209c-5.73-2.348-10.225-6.979-12.147-12.59-0.722-2.109-1.087-4.326-1.103-6.558-3.79 0.84-7.73 1.3-11.77 1.3-3.8 0-7.507-0.396-11.085-1.145-2.771 5.067-2.261 11.77 1.604 16.771l52.2 67.614c5.451 7.052 17.307 11.802 26.043 10.039l53.502-10.937c8.738-1.758 11.023-9.007 5.268-15.805l-12.19-14.37z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path865" Fill="#FFF7F7F7" Opacity=".76">
                                    <Path.Data>
                                        <PathGeometry Figures="m350.72 220.62l-17.744-6.353c-3.582 2.073-7.425 3.521-11.218 4.035l-84.159 11.401c-6.137 0.832-12.66-0.933-17.135-4.826-1.607-1.405-3.021-3.062-4.176-4.889-5.628 5.108-12.344 9.036-19.752 11.419 0.197 5.738 4.021 11.238 9.837 13.624l79.13 32.47c8.246 3.379 20.945 1.568 27.631-4.326l40.896-36.225c6.69-5.89 5.07-13.31-3.31-16.32z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path867" Fill="#FFF7F7F7" Opacity=".84">
                                    <Path.Data>
                                        <PathGeometry Figures="m348.16 129.82l-18.545 3.372c-2.065 3.589-4.668 6.763-7.696 9.103l-67.186 51.957c-4.896 3.79-11.021 5.288-16.838 4.15-2.232-0.44-4.355-1.271-6.302-2.424-2.312 7.471-6.202 14.238-11.276 19.935 2.953 4.987 8.961 7.96 15.244 7.108l84.65-11.401c8.83-1.195 18.874-9.085 21.719-17.534l17.277-51.804c2.86-8.47-2.27-14.07-11.04-12.48z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path869" Fill="#FFF7F7F7" Opacity=".92">
                                    <Path.Data>
                                        <PathGeometry Figures="m239.34 166.98c-2.159 0.737-4.421 1.08-6.688 1.051 0.871 3.851 1.348 7.852 1.348 11.966 0 3.75-0.384 7.41-1.109 10.944 5.049 2.834 11.729 2.399 16.742-1.476l67.61-52.203c7.051-5.451 11.802-17.306 10.039-26.044l-10.93-53.5c-1.755-8.739-9.008-11.027-15.803-5.269l-14.373 12.193c0.004 4.142-0.658 8.192-2.113 11.732l-32.205 78.591c-2.36 5.73-6.91 10.09-12.52 12.01z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                        <Viewbox.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard Duration="00:00:01" RepeatBehavior="Forever" AutoReverse="False">
                                            <DoubleAnimation From="0" To="360" Storyboard.TargetName="vb" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Viewbox.Triggers>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style TargetType="{x:Type ctrl:FrostySpinner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostySpinner}">
                    <Viewbox Stretch="Uniform">
                    <Canvas Width="80" Height="80">
                            <Canvas x:Name="path1" Width="80" Height="80" RenderTransformOrigin="0.5 0.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform/>
                                </Canvas.RenderTransform>
                                <Path  Fill="#f7f7f7" Data="M10,40c0,0,0-0.4,0-1.1c0-0.3,0-0.8,0-1.3c0-0.3,0-0.5,0-0.8c0-0.3,0.1-0.6,0.1-0.9c0.1-0.6,0.1-1.4,0.2-2.1
		c0.2-0.8,0.3-1.6,0.5-2.5c0.2-0.9,0.6-1.8,0.8-2.8c0.3-1,0.8-1.9,1.2-3c0.5-1,1.1-2,1.7-3.1c0.7-1,1.4-2.1,2.2-3.1
		c1.6-2.1,3.7-3.9,6-5.6c2.3-1.7,5-3,7.9-4.1c0.7-0.2,1.5-0.4,2.2-0.7c0.7-0.3,1.5-0.3,2.3-0.5c0.8-0.2,1.5-0.3,2.3-0.4l1.2-0.1
		l0.6-0.1l0.3,0l0.1,0l0.1,0l0,0c0.1,0-0.1,0,0.1,0c1.5,0,2.9-0.1,4.5,0.2c0.8,0.1,1.6,0.1,2.4,0.3c0.8,0.2,1.5,0.3,2.3,0.5
		c3,0.8,5.9,2,8.5,3.6c2.6,1.6,4.9,3.4,6.8,5.4c1,1,1.8,2.1,2.7,3.1c0.8,1.1,1.5,2.1,2.1,3.2c0.6,1.1,1.2,2.1,1.6,3.1
		c0.4,1,0.9,2,1.2,3c0.3,1,0.6,1.9,0.8,2.7c0.2,0.9,0.3,1.6,0.5,2.4c0.1,0.4,0.1,0.7,0.2,1c0,0.3,0.1,0.6,0.1,0.9
		c0.1,0.6,0.1,1,0.1,1.4C74,39.6,74,40,74,40c0.2,2.2-1.5,4.1-3.7,4.3s-4.1-1.5-4.3-3.7c0-0.1,0-0.2,0-0.3l0-0.4c0,0,0-0.3,0-0.9
		c0-0.3,0-0.7,0-1.1c0-0.2,0-0.5,0-0.7c0-0.2-0.1-0.5-0.1-0.8c-0.1-0.6-0.1-1.2-0.2-1.9c-0.1-0.7-0.3-1.4-0.4-2.2
		c-0.2-0.8-0.5-1.6-0.7-2.4c-0.3-0.8-0.7-1.7-1.1-2.6c-0.5-0.9-0.9-1.8-1.5-2.7c-0.6-0.9-1.2-1.8-1.9-2.7c-1.4-1.8-3.2-3.4-5.2-4.9
		c-2-1.5-4.4-2.7-6.9-3.6c-0.6-0.2-1.3-0.4-1.9-0.6c-0.7-0.2-1.3-0.3-1.9-0.4c-1.2-0.3-2.8-0.4-4.2-0.5l-2,0c-0.7,0-1.4,0.1-2.1,0.1
		c-0.7,0.1-1.4,0.1-2,0.3c-0.7,0.1-1.3,0.3-2,0.4c-2.6,0.7-5.2,1.7-7.5,3.1c-2.2,1.4-4.3,2.9-6,4.7c-0.9,0.8-1.6,1.8-2.4,2.7
		c-0.7,0.9-1.3,1.9-1.9,2.8c-0.5,1-1,1.9-1.4,2.8c-0.4,0.9-0.8,1.8-1,2.6c-0.3,0.9-0.5,1.6-0.7,2.4c-0.2,0.7-0.3,1.4-0.4,2.1
		c-0.1,0.3-0.1,0.6-0.2,0.9c0,0.3-0.1,0.6-0.1,0.8c0,0.5-0.1,0.9-0.1,1.3C10,39.6,10,40,10,40z">

                                </Path>
                                <Canvas.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard RepeatBehavior="Forever" AutoReverse="False">
                                                    <DoubleAnimation Duration="0:0:0.8" From="0" To="360" Storyboard.TargetName="path1" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Canvas.Triggers>
                            </Canvas>
                            <Canvas x:Name="path2" Width="80" Height="80" RenderTransformOrigin="0.5 0.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform/>
                                </Canvas.RenderTransform>
                                <Path  Fill="#f7f7f7" Data="M62,40.1c0,0,0,0.2-0.1,0.7c0,0.2,0,0.5-0.1,0.8c0,0.2,0,0.3,0,0.5c0,0.2-0.1,0.4-0.1,0.7
		c-0.1,0.5-0.2,1-0.3,1.6c-0.2,0.5-0.3,1.1-0.5,1.8c-0.2,0.6-0.5,1.3-0.7,1.9c-0.3,0.7-0.7,1.3-1,2.1c-0.4,0.7-0.9,1.4-1.4,2.1
		c-0.5,0.7-1.1,1.4-1.7,2c-1.2,1.3-2.7,2.5-4.4,3.6c-1.7,1-3.6,1.8-5.5,2.4c-2,0.5-4,0.7-6.2,0.7c-1.9-0.1-4.1-0.4-6-1.1
		c-1.9-0.7-3.7-1.5-5.2-2.6c-1.5-1.1-2.9-2.3-4-3.7c-0.6-0.6-1-1.4-1.5-2c-0.4-0.7-0.8-1.4-1.2-2c-0.3-0.7-0.6-1.3-0.8-2
		c-0.2-0.6-0.4-1.2-0.6-1.8c-0.1-0.6-0.3-1.1-0.4-1.6c-0.1-0.5-0.1-1-0.2-1.4c-0.1-0.9-0.1-1.5-0.1-2c0-0.5,0-0.7,0-0.7
		s0,0.2,0.1,0.7c0.1,0.5,0,1.1,0.2,2c0.1,0.4,0.2,0.9,0.3,1.4c0.1,0.5,0.3,1,0.5,1.6c0.2,0.6,0.4,1.1,0.7,1.8
		c0.3,0.6,0.6,1.2,0.9,1.9c0.4,0.6,0.8,1.3,1.2,1.9c0.5,0.6,1,1.3,1.6,1.8c1.1,1.2,2.5,2.3,4,3.2c1.5,0.9,3.2,1.6,5,2.1
		c1.8,0.5,3.6,0.6,5.6,0.6c1.8-0.1,3.7-0.4,5.4-1c1.7-0.6,3.3-1.4,4.7-2.4c1.4-1,2.6-2.1,3.6-3.3c0.5-0.6,0.9-1.2,1.3-1.8
		c0.4-0.6,0.7-1.2,1-1.8c0.3-0.6,0.6-1.2,0.8-1.8c0.2-0.6,0.4-1.1,0.5-1.7c0.1-0.5,0.2-1,0.3-1.5c0.1-0.4,0.1-0.8,0.1-1.2
		c0-0.2,0-0.4,0.1-0.5c0-0.2,0-0.4,0-0.5c0-0.3,0-0.6,0-0.8c0-0.5,0-0.7,0-0.7c0-1.1,0.9-2,2-2s2,0.9,2,2C62,40,62,40.1,62,40.1z">
                                </Path>
                                <Canvas.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard RepeatBehavior="Forever" AutoReverse="False">
                                                    <DoubleAnimation Duration="0:0:0.6" From="0" To="-360" Storyboard.TargetName="path2" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Canvas.Triggers>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style TargetType="{x:Type ctrl:FrostySpinner}">
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostySpinner}">
                    <Viewbox Stretch="Uniform">
                        <Canvas Name="svg4614" Width="45" Height="45">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas Name="g4612">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="1" Y="1"/>
                                </Canvas.RenderTransform>
                                <Ellipse xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Canvas.Left="16" Canvas.Top="16" Width="12" Height="12" Name="circle4606" StrokeThickness="2" Stroke="#F7F7F7" Opacity="0">
                                    <Ellipse.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard BeginTime="0:0:1.5" Duration="0:0:3" RepeatBehavior="Forever" AutoReverse="False">
                                                        <DoubleAnimation Duration="0:0:3" From="12" To="44" Storyboard.TargetName="circle4606" Storyboard.TargetProperty="Width"/>
                                                        <DoubleAnimation Duration="0:0:3" From="12" To="44" Storyboard.TargetName="circle4606" Storyboard.TargetProperty="Height"/>
                                                        <DoubleAnimation Duration="0:0:3" From="16" To="0" Storyboard.TargetName="circle4606" Storyboard.TargetProperty="(Canvas.Left)"/>
                                                        <DoubleAnimation Duration="0:0:3" From="16" To="0" Storyboard.TargetName="circle4606" Storyboard.TargetProperty="(Canvas.Top)"/>
                                                        <DoubleAnimation Duration="0:0:3" From="1" To="0" Storyboard.TargetName="circle4606" Storyboard.TargetProperty="Opacity"/>
                                                        <DoubleAnimation Duration="0:0:3" From="4" To="0" Storyboard.TargetName="circle4606" Storyboard.TargetProperty="StrokeThickness"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Ellipse.Triggers>
                                </Ellipse>
                                <Ellipse xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Canvas.Left="16" Canvas.Top="16" Width="12" Height="12" Name="circle4608" StrokeThickness="2" Stroke="#F7F7F7" Opacity="0">
                                    <Ellipse.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard BeginTime="0:0:3" Duration="0:0:3" RepeatBehavior="Forever" AutoReverse="False">
                                                        <DoubleAnimation Duration="0:0:3" From="12" To="44" Storyboard.TargetName="circle4608" Storyboard.TargetProperty="Width"/>
                                                        <DoubleAnimation Duration="0:0:3" From="12" To="44" Storyboard.TargetName="circle4608" Storyboard.TargetProperty="Height"/>
                                                        <DoubleAnimation Duration="0:0:3" From="16" To="0" Storyboard.TargetName="circle4608" Storyboard.TargetProperty="(Canvas.Left)"/>
                                                        <DoubleAnimation Duration="0:0:3" From="16" To="0" Storyboard.TargetName="circle4608" Storyboard.TargetProperty="(Canvas.Top)"/>
                                                        <DoubleAnimation Duration="0:0:3" From="1" To="0" Storyboard.TargetName="circle4608" Storyboard.TargetProperty="Opacity"/>
                                                        <DoubleAnimation Duration="0:0:3" From="4" To="0" Storyboard.TargetName="circle4608" Storyboard.TargetProperty="StrokeThickness"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Ellipse.Triggers>
                                </Ellipse>
                                <Ellipse xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Canvas.Left="14" Canvas.Top="14" Width="16" Height="16" Name="circle4610" StrokeThickness="4" Stroke="#F7F7F7">
                                    <Ellipse.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard Duration="0:0:1.5" RepeatBehavior="Forever" AutoReverse="False">
                                                        <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.25" From="12" To="2" Storyboard.TargetName="circle4610" Storyboard.TargetProperty="Width"/>
                                                        <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.25" From="12" To="2" Storyboard.TargetName="circle4610" Storyboard.TargetProperty="Height"/>
                                                        <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.25" From="16" To="21" Storyboard.TargetName="circle4610" Storyboard.TargetProperty="(Canvas.Left)"/>
                                                        <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.25" From="16" To="21" Storyboard.TargetName="circle4610" Storyboard.TargetProperty="(Canvas.Top)"/>
                                                        
                                                        <DoubleAnimation BeginTime="0:0:0.25" Duration="0:0:1.25" From="2" To="12" Storyboard.TargetName="circle4610" Storyboard.TargetProperty="Width"/>
                                                        <DoubleAnimation BeginTime="0:0:0.25" Duration="0:0:1.25" From="2" To="12" Storyboard.TargetName="circle4610" Storyboard.TargetProperty="Height"/>
                                                        <DoubleAnimation BeginTime="0:0:0.25" Duration="0:0:1.25" From="21" To="16" Storyboard.TargetName="circle4610" Storyboard.TargetProperty="(Canvas.Left)"/>
                                                        <DoubleAnimation BeginTime="0:0:0.25" Duration="0:0:1.25" From="21" To="16" Storyboard.TargetName="circle4610" Storyboard.TargetProperty="(Canvas.Top)"/>

                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Ellipse.Triggers>
                                </Ellipse>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- FrostyEditableLabel -->
    <Style TargetType="{x:Type ctrl:FrostyEditableLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostyEditableLabel}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <TextBlock x:Name="PART_Label" VerticalAlignment="Stretch" Text="{Binding Path=Text, RelativeSource={RelativeSource FindAncestor, 
                    AncestorType={x:Type ctrl:FrostyEditableLabel}}, Mode=TwoWay}" Foreground="{StaticResource FontColor}" Margin="2,0,0,0"/>
                        <TextBox x:Name="PART_TextBox" MinWidth="40" Visibility="Collapsed" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="2,0,10,0" Cursor="IBeam"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FrostyImageButton -->
    <Style TargetType="{x:Type ctrl:FrostyImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:FrostyImageButton}">
                    <Grid Height="88" Width="88">
                        <Button x:Name="PART_Button" Cursor="Hand">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
                                    <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
                                    <Setter Property="Padding" Value="2"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="buttonBorder" Background="Transparent" BorderThickness="0" CornerRadius="4">
                                                    <Grid x:Name="g1" Height="88" Width="88" Background="{StaticResource ControlBackground}">
                                                        <Border Background="{StaticResource ListBackground}" Width="80" Height="80"/>
                                                        <Border Background="{StaticResource ListBackground}" Width="88" Height="60"/>
                                                        <Border Background="{StaticResource ListBackground}" Width="60" Height="88"/>
                                                        <StackPanel VerticalAlignment="Center">
                                                            <Label Content="{Binding Path=Title, RelativeSource={RelativeSource AncestorType={x:Type ctrl:FrostyImageButton}}}" ContentStringFormat="NO {0}" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Global User Interface" FontWeight="Bold" Opacity="0.5"/>
                                                            <Label Content="Click to import" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Global User Interface" FontSize="10" Opacity="0.5" Margin="0,-10,0,0"/>
                                                        </StackPanel>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="g1" Property="Background" Value="#FF707070" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="g1" Property="Background" Value="#FF585858" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Image x:Name="PART_Image" IsHitTestVisible="False"/>
                        <Button x:Name="PART_ClearButton" Width="16" Height="16" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,1,1,0" Visibility="Collapsed">
                            <Image Source="/FrostyControls;component/Images/Clear.png"/>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
